cmake_minimum_required(VERSION 2.8)
project(succinct-bench CXX)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
else()
    CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
    if(COMPILER_SUPPORTS_CXX0X)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
    else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
    endif()
endif()
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -g")

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

file(MAKE_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})

set(INCLUDE $ENV{HOME}/include include)
set(LIBRARY $ENV{HOME}/lib)
include_directories(${INCLUDE})
link_directories(${LIBRARY})
add_executable(bench src/bench.cc)
add_executable(bench_arr src/bench_arr.cc)

target_link_libraries(bench sdsl)
target_link_libraries(bench divsufsort)
target_link_libraries(bench divsufsort64)

target_link_libraries(bench_arr sdsl)
target_link_libraries(bench_arr divsufsort)
target_link_libraries(bench_arr divsufsort64)
